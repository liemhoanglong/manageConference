/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package conferenceproject;

import java.util.*;
import dao.*;
import static java.lang.Integer.parseInt;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import pojos.*;

/**
 *
 * @author LONG LIN
 */
public class JDialogAccount extends javax.swing.JDialog {

    private userDao accD = new userDao();

    /**
     * Creates new form JDialogAccount
     */
    public JDialogAccount(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        getUserData();
        this.setLocationRelativeTo(null);
    }

    public void getUserData() {
        DefaultTableModel dtm = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                //all cells false
                return false;
            }
        };
        dtm.addColumn("Id");
        dtm.addColumn("Họ và tên");
        dtm.addColumn("Tên đăng nhập");
        dtm.addColumn("Email");
        dtm.addColumn("Loại");
        for (User acc : this.accD.findAll()) {
            dtm.addRow(new Object[]{acc.getIdUser(), acc.getName(), acc.getUsername(), acc.getEmail(), acc.getType()});
        }
        this.jTableListAccount.setAutoCreateRowSorter(true);
        this.jTableListAccount.setModel(dtm);
        this.jTableListAccount.repaint();
        this.jTableListAccount.revalidate();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSlider1 = new javax.swing.JSlider();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableListAccount = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        id = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        email = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        fullname = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        username = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        type = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jButtonSearchType = new javax.swing.JButton();
        jButtonSearchName = new javax.swing.JButton();
        jTextFieldSearchName = new javax.swing.JTextField();
        jComboBoxSearchType = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Danh sách tài khoản");
        setMinimumSize(new java.awt.Dimension(853, 439));
        setResizable(false);

        jTableListAccount.setBackground(new java.awt.Color(255, 255, 255));
        jTableListAccount.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        jTableListAccount.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableListAccount.setRowHeight(40);
        jTableListAccount.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableListAccountMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableListAccount);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin tài khoản", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 18))); // NOI18N

        jLabel13.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel13.setText("Họ và tên:");

        id.setEditable(false);
        id.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel14.setText("Tên đăng nhập:");

        jLabel16.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel16.setText("Email:");

        email.setEditable(false);
        email.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        email.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(250, 99, 12));
        jButton4.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jButton4.setForeground(java.awt.Color.white);
        jButton4.setText("Khách");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        fullname.setEditable(false);
        fullname.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        fullname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fullnameActionPerformed(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel17.setText("Id:");

        username.setEditable(false);
        username.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N

        jLabel18.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel18.setText("Loại:");

        type.setEditable(false);
        type.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        type.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 51, 51));
        jLabel1.setText("Loại 1: Admin, loại 2: Người dùng thường, loại 3: Chặn");

        jButton5.setBackground(new java.awt.Color(250, 99, 12));
        jButton5.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jButton5.setForeground(java.awt.Color.white);
        jButton5.setText("admin");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setBackground(new java.awt.Color(250, 99, 12));
        jButton6.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jButton6.setForeground(java.awt.Color.white);
        jButton6.setText("Chặn");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel15)
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel14)
                                        .addComponent(jLabel17)
                                        .addComponent(jLabel13)
                                        .addComponent(jLabel16)
                                        .addComponent(jLabel18)))
                                .addGap(44, 44, 44)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(email)
                                    .addComponent(id, javax.swing.GroupLayout.DEFAULT_SIZE, 327, Short.MAX_VALUE)
                                    .addComponent(fullname)
                                    .addComponent(username)
                                    .addComponent(type)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jButton6)
                                .addGap(134, 134, 134)
                                .addComponent(jButton4)
                                .addGap(129, 129, 129)
                                .addComponent(jButton5))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addComponent(jLabel1)))
                .addGap(50, 50, 50))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fullname, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(username, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(type, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(jLabel15))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1)))
                .addGap(0, 0, 0)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(jButton5)
                    .addComponent(jButton6))
                .addGap(69, 69, 69))
        );

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLabel3.setForeground(java.awt.Color.black);
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Danh sách tài khoản");

        jButtonSearchType.setBackground(new java.awt.Color(250, 99, 12));
        jButtonSearchType.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jButtonSearchType.setForeground(java.awt.Color.white);
        jButtonSearchType.setText("Lọc theo loại");
        jButtonSearchType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchTypeActionPerformed(evt);
            }
        });

        jButtonSearchName.setBackground(new java.awt.Color(250, 99, 12));
        jButtonSearchName.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jButtonSearchName.setForeground(java.awt.Color.white);
        jButtonSearchName.setText("Lọc theo tên");
        jButtonSearchName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchNameActionPerformed(evt);
            }
        });

        jTextFieldSearchName.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N

        jComboBoxSearchType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(120, 120, 120)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(120, 120, 120))
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jScrollPane1)
                .addGap(40, 40, 40))
            .addGroup(layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldSearchName, javax.swing.GroupLayout.DEFAULT_SIZE, 576, Short.MAX_VALUE)
                    .addComponent(jComboBoxSearchType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonSearchType)
                    .addComponent(jButtonSearchName))
                .addGap(52, 52, 52))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldSearchName, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonSearchName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButtonSearchType)
                    .addComponent(jComboBoxSearchType))
                .addGap(14, 14, 14)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTableListAccountMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableListAccountMouseClicked
        String idAcc = this.jTableListAccount.getValueAt(this.jTableListAccount.getSelectedRow(), 0).toString();
        User acc = this.accD.find(idAcc);
        this.id.setText(acc.getIdUser().toString());
        this.fullname.setText(acc.getName());
        this.username.setText(acc.getUsername());
        this.email.setText(acc.getEmail());
        if (acc.getType() == 1) {
            this.type.setText("Admin");
        } else if (acc.getType() == 2) {
            this.type.setText("Người dùng");
        } else {
            this.type.setText("Tài khoản bị chặn");
        }
    }//GEN-LAST:event_jTableListAccountMouseClicked

    private void typeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_typeActionPerformed

    private void fullnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fullnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fullnameActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        String idAcc = this.id.getText();
        User acc = accD.find(idAcc);
        int cf = JOptionPane.showConfirmDialog(null, "Bạn có muốn tài khoản này là người dùng?", "Xác nhận", JOptionPane.YES_NO_OPTION);
        if (cf == JOptionPane.YES_OPTION) {
            acc.setType(2);
            if (this.accD.update(acc)) {
                JOptionPane.showMessageDialog(null, "Sửa tài khoản thành người dùng thành công");
                getUserData();
                this.id.setText("");
                this.fullname.setText("");
                this.username.setText("");
                this.email.setText("");
                this.type.setText("");
            } else {
                JOptionPane.showMessageDialog(null, "Sửa tài khoản thành người dùng thất bại");
            }
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void emailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailActionPerformed

    private void idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idActionPerformed

    public void getUserDataByType() {
        DefaultTableModel dtm = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                //all cells false
                return false;
            }
        };
        dtm.addColumn("Id");
        dtm.addColumn("Họ và tên");
        dtm.addColumn("Tên đăng nhập");
        dtm.addColumn("Email");
        dtm.addColumn("Loại");
//        String a = this.jTextFieldSearchType.getText();
        String a = this.jComboBoxSearchType.getSelectedItem().toString();
        System.out.println(a);
        for (User acc : this.accD.findByType(a)) {
            dtm.addRow(new Object[]{acc.getIdUser(), acc.getName(), acc.getUsername(), acc.getEmail(), acc.getType()});
        }
        this.jTableListAccount.setAutoCreateRowSorter(true);
        this.jTableListAccount.setModel(dtm);
        this.jTableListAccount.repaint();
        this.jTableListAccount.revalidate();
    }

    private void jButtonSearchTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchTypeActionPerformed
//        System.out.println(jTextFieldSearchType.getText());
//        if (this.jTextFieldSearchType.getText() == null) {
//            getUserData();
//        } else {
        getUserDataByType();
//        }
    }//GEN-LAST:event_jButtonSearchTypeActionPerformed

    public void getUserDataByName() {
        DefaultTableModel dtm = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                //all cells false
                return false;
            }
        };
        dtm.addColumn("Id");
        dtm.addColumn("Họ và tên");
        dtm.addColumn("Tên đăng nhập");
        dtm.addColumn("Email");
        dtm.addColumn("Loại");
        for (User acc : this.accD.findByName(this.jTextFieldSearchName.getText())) {
            dtm.addRow(new Object[]{acc.getIdUser(), acc.getName(), acc.getUsername(), acc.getEmail(), acc.getType()});
        }
        this.jTableListAccount.setAutoCreateRowSorter(true);
        this.jTableListAccount.setModel(dtm);
        this.jTableListAccount.repaint();
        this.jTableListAccount.revalidate();
    }

    private void jButtonSearchNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchNameActionPerformed
        getUserDataByName();
    }//GEN-LAST:event_jButtonSearchNameActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        String idAcc = this.id.getText();
        User acc = accD.find(idAcc);
        int cf = JOptionPane.showConfirmDialog(null, "Bạn có muốn tài khoản này là admin?", "Xác nhận", JOptionPane.YES_NO_OPTION);
        if (cf == JOptionPane.YES_OPTION) {
            acc.setType(1);
            if (this.accD.update(acc)) {
                JOptionPane.showMessageDialog(null, "Đặt tài khoản thành admin thành công");
                getUserData();
                this.id.setText("");
                this.fullname.setText("");
                this.username.setText("");
                this.email.setText("");
                this.type.setText("");
            } else {
                JOptionPane.showMessageDialog(null, "Đặt tài khoản thành admin thất bại");
            }
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        String idAcc = this.id.getText();
        User acc = accD.find(idAcc);
        int cf = JOptionPane.showConfirmDialog(null, "Bạn có chắc chặn tài khoản này?", "Xác nhận", JOptionPane.YES_NO_OPTION);
        if (cf == JOptionPane.YES_OPTION) {
            acc.setType(3);
            if (this.accD.update(acc)) {
                JOptionPane.showMessageDialog(null, "Chặn tài khoản thành công");
                getUserData();
                this.id.setText("");
                this.fullname.setText("");
                this.username.setText("");
                this.email.setText("");
                this.type.setText("");
            } else {
                JOptionPane.showMessageDialog(null, "Chặn tài khoản thất bại");
            }
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JDialogAccount.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JDialogAccount.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JDialogAccount.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JDialogAccount.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JDialogAccount dialog = new JDialogAccount(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField email;
    private javax.swing.JTextField fullname;
    private javax.swing.JTextField id;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButtonSearchName;
    private javax.swing.JButton jButtonSearchType;
    private javax.swing.JComboBox<String> jComboBoxSearchType;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JTable jTableListAccount;
    private javax.swing.JTextField jTextFieldSearchName;
    private javax.swing.JTextField type;
    private javax.swing.JTextField username;
    // End of variables declaration//GEN-END:variables
}
